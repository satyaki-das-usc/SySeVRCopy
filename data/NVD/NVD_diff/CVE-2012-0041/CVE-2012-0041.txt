diff --git a/epan/packet.c b/epan/packet.c
--- a/epan/packet.c	2011/12/13 00:02:30	40163
+++ b/epan/packet.c	2011/12/13 00:44:22	40164
@@ -305,7 +305,31 @@
 	EP_CHECK_CANARY(("before dissecting frame %d",fd->num));
 
 	TRY {
-		edt->tvb = tvb_new_real_data(pd, fd->cap_len, fd->pkt_len);
+		/*
+		 * XXX - currently, the length arguments to
+		 * tvb_new_real_data() are signed, but the captured
+		 * and reported length values are unsigned; this means
+		 * that length values > 2^31 - 1 will appear as
+		 * negative lengths in tvb_new_real_data().
+		 *
+		 * Captured length values that large will already
+		 * have been filtered out by the Wiretap modules
+		 * (the file will be reported as corrupted), to
+		 * avoid trying to allocate large chunks of data.
+		 *
+		 * Reported length values will not have been
+		 * filtered out, and should not be filtered out,
+		 * as those lengths are not necessarily invalid.
+		 *
+		 * For now, we clip the reported length at G_MAXINT,
+		 * so that tvb_new_real_data() doesn't fail.  It
+		 * would throw an exception, which we'd catch, but
+		 * that would mean we would have no tvbuffs
+		 * associated with edt, which would upset much of
+		 * the rest of the application.
+		 */
+		edt->tvb = tvb_new_real_data(pd, fd->cap_len,
+		    fd->pkt_len > G_MAXINT ? G_MAXINT : fd->pkt_len);
 		/* Add this tvbuffer into the data_src list */
 		add_new_data_source(&edt->pi, edt->tvb, "Frame");