diff --git a/netwerk/socket/nsSOCKSIOLayer.cpp b/netwerk/socket/nsSOCKSIOLayer.cpp
--- a/netwerk/socket/nsSOCKSIOLayer.cpp
+++ b/netwerk/socket/nsSOCKSIOLayer.cpp
@@ -73,16 +73,17 @@ public:
               int32_t proxyPort,
               const char *destinationHost,
               uint32_t flags);
 
     void SetConnectTimeout(PRIntervalTime to);
     PRStatus DoHandshake(PRFileDesc *fd, int16_t oflags = -1);
     int16_t GetPollFlags() const;
     bool IsConnected() const { return mState == SOCKS_CONNECTED; }
+    void ForgetFD() { mFD = nullptr; }
 
 private:
     void HandshakeFinished(PRErrorCode err = 0);
     PRStatus StartDNS(PRFileDesc *fd);
     PRStatus ConnectToProxy(PRFileDesc *fd);
     void FixupAddressFamily(PRFileDesc *fd, PRNetAddr *proxy);
     PRStatus ContinueConnectingToProxy(PRFileDesc *fd, int16_t oflags);
     PRStatus WriteV4ConnectRequest();
@@ -268,18 +269,20 @@ nsSOCKSSocketInfo::OnLookupComplete(nsIC
                                     nsIDNSRecord *aRecord,
                                     nsresult aStatus)
 {
     NS_ABORT_IF_FALSE(aRequest == mLookup, "wrong DNS query");
     mLookup = nullptr;
     mLookupStatus = aStatus;
     mDnsRec = aRecord;
     mState = SOCKS_DNS_COMPLETE;
-    ConnectToProxy(mFD);
-    mFD = nullptr;
+    if (mFD) {
+      ConnectToProxy(mFD);
+      ForgetFD();
+    }
     return NS_OK;
 }
 
 PRStatus
 nsSOCKSSocketInfo::ConnectToProxy(PRFileDesc *fd)
 {
     PRStatus status;
     nsresult rv;
@@ -1120,16 +1123,17 @@ nsSOCKSIOLayerPoll(PRFileDesc *fd, int16
 static PRStatus
 nsSOCKSIOLayerClose(PRFileDesc *fd)
 {
     nsSOCKSSocketInfo * info = (nsSOCKSSocketInfo*) fd->secret;
     PRDescIdentity id = PR_GetLayersIdentity(fd);
 
     if (info && id == nsSOCKSIOLayerIdentity)
     {
+        info->ForgetFD();
         NS_RELEASE(info);
         fd->identity = PR_INVALID_IO_LAYER;
     }
 
     return fd->lower->methods->close(fd->lower);
 }
 
 static PRFileDesc*
