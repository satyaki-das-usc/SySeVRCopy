diff --git a/epan/dissectors/packet-sflow.c b/epan/dissectors/packet-sflow.c
--- a/epan/dissectors/packet-sflow.c	2012/10/04 19:37:03	45323
+++ b/epan/dissectors/packet-sflow.c	2012/10/04 19:51:00	45324
@@ -56,6 +56,7 @@
 
 #include <epan/packet.h>
 #include <epan/prefs.h>
+#include <epan/expert.h>
 
 #define SFLOW_UDP_PORTS "6343"
 
@@ -862,11 +863,13 @@
 }
 
 static gint
-dissect_sflow_245_address_type(tvbuff_t *tvb, proto_tree *tree, gint offset,
+dissect_sflow_245_address_type(tvbuff_t *tvb, packet_info *pinfo,
+                               proto_tree *tree, gint offset,
                                struct sflow_address_type *hf_type,
                                struct sflow_address_details *addr_detail) {
     guint32 addr_type;
     int len;
+    proto_item *pi;
 
     addr_type = tvb_get_ntohl(tvb, offset);
     offset += 4;
@@ -881,15 +884,12 @@
         proto_tree_add_item(tree, hf_type->hf_addr_v6, tvb, offset, 16, ENC_NA);
         break;
     default:
-        /* acferen:  November 10, 2010
-         *
-         * We should never get here, but if we do we don't know
-         * the length for this address type.  Not knowing the
-         * length this default case is doomed to failure.  Might
-         * as well acknowledge that as soon as possible.
-         */
-        proto_tree_add_text(tree, tvb, offset - 4, 4, "Unknown address type (%u)", addr_type);
-        return 0;               /* malformed packet */
+        /* unknown/invalid address type, we don't know the length
+           setting it to 0 is ok, offset is incremented by this function,
+           we won't get stuck in an endless loop */
+        len = 0;
+        pi = proto_tree_add_text(tree, tvb, offset - 4, 4, "Unknown address type (%u)", addr_type);
+        expert_add_info_format(pinfo, pi, PI_MALFORMED, PI_ERROR, "Unknown/invalid address type");
     }
 
     if (addr_detail) {
