diff --git a/toolkit/components/maintenanceservice/serviceinstall.cpp b/toolkit/components/maintenanceservice/serviceinstall.cpp
--- a/toolkit/components/maintenanceservice/serviceinstall.cpp
+++ b/toolkit/components/maintenanceservice/serviceinstall.cpp
@@ -175,27 +175,35 @@ FixServicePath(SC_HANDLE service,
                BOOL &servicePathWasWrong)
 {
   // When we originally upgraded the MozillaMaintenance service we
   // would uninstall the service on each upgrade.  This had an
   // intermittent error which could cause the service to use the file
   // maintenanceservice_tmp.exe as the install path.  Only a small number
   // of Nightly users would be affected by this, but we check for this
   // state here and fix the user if they are affected.
+  //
+  // We also fix the path in the case of the path not being quoted.
+  size_t currentServicePathLen = wcslen(currentServicePath);
   bool doesServiceHaveCorrectPath =
-    !wcsstr(currentServicePath, L"maintenanceservice_tmp.exe");
+    currentServicePathLen > 2 &&
+    !wcsstr(currentServicePath, L"maintenanceservice_tmp.exe") &&
+    currentServicePath[0] == L'\"' &&
+    currentServicePath[currentServicePathLen - 1] == L'\"';
+
   if (doesServiceHaveCorrectPath) {
     LOG(("The MozillaMaintenance service path is correct."));
     servicePathWasWrong = FALSE;
     return TRUE;
   }
   // This is a recoverable situation so not logging as a warning
-  LOG(("The MozillaMaintenance path is NOT correct."));
+  LOG(("The MozillaMaintenance path is NOT correct. It was: %ls",
+       currentServicePath));
+
   servicePathWasWrong = TRUE;
-
   WCHAR fixedPath[MAX_PATH + 1] = { L'\0' };
   wcsncpy(fixedPath, currentServicePath, MAX_PATH);
   PathUnquoteSpacesW(fixedPath);
   if (!PathRemoveFileSpecW(fixedPath)) {
     LOG_WARN(("Couldn't remove file spec.  (%d)", GetLastError()));
     return FALSE;
   }
   if (!PathAppendSafe(fixedPath, L"maintenanceservice.exe")) {
