diff --git a/epan/dissectors/packet-diameter.c b/epan/dissectors/packet-diameter.c
--- a/epan/dissectors/packet-diameter.c	2012/04/22 20:50:34	42199
+++ b/epan/dissectors/packet-diameter.c	2012/04/23 01:36:57	42200
@@ -180,9 +180,7 @@
 
 static const char* simple_avp(diam_ctx_t*, diam_avp_t*, tvbuff_t*);
 
-static const value_string no_vs[] = {{0, NULL} };
-static GArray no_garr = { (void*)no_vs, 0 };
-static diam_vnd_t unknown_vendor = { 0xffffffff, &no_garr, NULL,  &no_garr };
+static diam_vnd_t unknown_vendor = { 0xffffffff, NULL, NULL, NULL };
 static diam_vnd_t no_vnd = { 0, NULL, NULL, NULL };
 static diam_avp_t unknown_avp = {0, &unknown_vendor, simple_avp, simple_avp, -1, -1, NULL };
 static GArray* all_cmds;
@@ -1391,6 +1389,11 @@
 }
 
 
+/* Note: Dynamic "value string arrays" (e.g., vs_cmds, vs_avps, ...) are constructed using */
+/*       "zero-terminated" GArrays so that they will have the same form as standard        */
+/*       value_string arrays created at compile time. Since the last entry in a            */
+/*       value_string array must be {0, NULL}, we are assuming that NULL == 0 (hackish).   */
+
 static int
 dictionary_load(void)
 {
@@ -1418,6 +1421,8 @@
 	dictionary.vnds = pe_tree_create(EMEM_TREE_TYPE_RED_BLACK,"diameter_vnds");
 	dictionary.avps = pe_tree_create(EMEM_TREE_TYPE_RED_BLACK,"diameter_avps");
 
+	unknown_vendor.vs_cmds = g_array_new(TRUE,TRUE,sizeof(value_string));
+	unknown_vendor.vs_avps = g_array_new(TRUE,TRUE,sizeof(value_string));
 	no_vnd.vs_cmds = g_array_new(TRUE,TRUE,sizeof(value_string));
 	no_vnd.vs_avps = g_array_new(TRUE,TRUE,sizeof(value_string));