diff --git a/content/base/public/nsIContentUtils.h b/content/base/public/nsIContentUtils.h
--- a/content/base/public/nsIContentUtils.h
+++ b/content/base/public/nsIContentUtils.h
@@ -32,25 +32,28 @@
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 #ifndef nsIContentUtils_h__
 #define nsIContentUtils_h__
 
-// C4EA618E-A3D9-4524-8EEA-E92F26FC44DB
+class nsIInterfaceRequestor;
+
+// 65902866-273b-4340-9857-af8b2a44b3eb
 #define NS_ICONTENTUTILS_IID \
-{ 0xC4EA618E, 0xA3D9, 0x4524, \
-  { 0x8E, 0xEA, 0xE9, 0x2F, 0x26, 0xFC, 0x44, 0xDB } }
+{ 0x65902866, 0x273b, 0x4340, \
+  { 0x98, 0x57, 0xaf, 0x8b, 0x2a, 0x44, 0xb3, 0xeb } }
 
 class nsIContentUtils : public nsISupports
 {
 public:
     NS_DECLARE_STATIC_IID_ACCESSOR(NS_ICONTENTUTILS_IID)
     NS_DECL_ISUPPORTS
 
     virtual PRBool IsSafeToRunScript();
+    virtual nsIInterfaceRequestor* GetSameOriginChecker();
 };
 
 NS_DEFINE_STATIC_IID_ACCESSOR(nsIContentUtils, NS_ICONTENTUTILS_IID)
 
 #endif /* nsIContentUtils_h__ */
diff --git a/content/base/src/nsContentUtils.cpp b/content/base/src/nsContentUtils.cpp
--- a/content/base/src/nsContentUtils.cpp
+++ b/content/base/src/nsContentUtils.cpp
@@ -4503,16 +4503,22 @@ nsContentUtils::RemoveScriptBlocker()
 NS_IMPL_ISUPPORTS1(nsIContentUtils, nsIContentUtils)
 
 PRBool
 nsIContentUtils::IsSafeToRunScript()
 {
   return nsContentUtils::IsSafeToRunScript();
 }
 
+nsIInterfaceRequestor*
+nsIContentUtils::GetSameOriginChecker()
+{
+  return nsContentUtils::GetSameOriginChecker();
+}
+
 /* static */
 PRBool
 nsContentUtils::AddScriptRunner(nsIRunnable* aRunnable)
 {
   if (!aRunnable) {
     return PR_FALSE;
   }
 
diff --git a/modules/plugin/base/src/nsPluginHost.cpp b/modules/plugin/base/src/nsPluginHost.cpp
--- a/modules/plugin/base/src/nsPluginHost.cpp
+++ b/modules/plugin/base/src/nsPluginHost.cpp
@@ -153,16 +153,17 @@
 #include "nsIWebNavigation.h"
 #include "nsISupportsArray.h"
 #include "nsIDocShell.h"
 #include "nsPluginNativeWindow.h"
 #include "nsIScriptSecurityManager.h"
 #include "nsIContentPolicy.h"
 #include "nsContentPolicyUtils.h"
 #include "nsContentErrors.h"
+#include "nsIContentUtils.h"
 
 #if defined(XP_WIN)
 #include "windows.h"
 #include "winbase.h"
 #endif
 
 #if defined(XP_UNIX) && defined(MOZ_WIDGET_GTK2) & defined(MOZ_X11)
 #include <gdk/gdkx.h> // for GDK_DISPLAY()
@@ -5493,34 +5494,28 @@ nsresult nsPluginHost::NewPluginURLStrea
 
     nsRefPtr<nsPluginStreamListenerPeer> listenerPeer = new nsPluginStreamListenerPeer();
     if (listenerPeer == NULL)
       return NS_ERROR_OUT_OF_MEMORY;
 
     rv = listenerPeer->Initialize(url, aInstance, aListener);
 
     if (NS_SUCCEEDED(rv)) {
-      nsCOMPtr<nsIInterfaceRequestor> callbacks;
-      if (doc) {
-        // Get the script global object owner and use that as the
-        // notification callback.
-        nsIScriptGlobalObject* global = doc->GetScriptGlobalObject();
-        if (global) {
-          nsCOMPtr<nsIWebNavigation> webNav = do_GetInterface(global);
-          callbacks = do_QueryInterface(webNav);
-        }
-      }
+      nsCOMPtr<nsIContentUtils> contentUtils = do_GetService("@mozilla.org/content/contentutils;1");
+      NS_ENSURE_TRUE(contentUtils, NS_ERROR_OUT_OF_MEMORY);
+
+      nsCOMPtr<nsIInterfaceRequestor> sameOriginChecker = contentUtils->GetSameOriginChecker();
+      NS_ENSURE_TRUE(sameOriginChecker, NS_ERROR_OUT_OF_MEMORY);
 
       nsCOMPtr<nsIChannel> channel;
-
       rv = NS_NewChannel(getter_AddRefs(channel), url, nsnull,
         nsnull, /* do not add this internal plugin's channel
                 on the load group otherwise this channel could be canceled
                 form |nsDocShell::OnLinkClickSync| bug 166613 */
-        callbacks);
+        sameOriginChecker);
       if (NS_FAILED(rv))
         return rv;
 
       if (doc) {
         // Set the owner of channel to the document principal...
         channel->SetOwner(doc->NodePrincipal());
 
         // And if it's a script allow it to execute against the

